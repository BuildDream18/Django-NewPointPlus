# Generated by Django 3.2.2 on 2021-08-25 12:30

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.IntegerField(choices=[(1, 'payable'), (2, 'exchange')], verbose_name='ボーナス種別')),
                ('grant_count', models.IntegerField(default=0, verbose_name='付与数')),
                ('use_count', models.IntegerField(default=0, verbose_name='利用数')),
                ('expired_at', models.DateField(verbose_name='有効期限日')),
                ('granted_at', models.DateTimeField(null=True, verbose_name='付与日')),
            ],
            options={
                'verbose_name': 'ボーナス情報',
                'verbose_name_plural': 'ボーナス情報',
                'db_table': 'bonus',
            },
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_type_name', models.CharField(default='', max_length=191, verbose_name='業種名')),
            ],
            options={
                'verbose_name': '業種情報',
                'verbose_name_plural': '業種情報',
                'db_table': 'business_type',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('campaign_name', models.CharField(default='', max_length=191, verbose_name='キャンペーン名')),
                ('start_campaign_at', models.DateTimeField(default=datetime.datetime(2021, 8, 25, 12, 30, 51, 479146, tzinfo=utc), verbose_name='キャンペーン開始日時')),
                ('end_campaign_at', models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999), verbose_name='キャンペーン終了日時')),
                ('priority', models.IntegerField(default=1, verbose_name='キャンペーン適用優先順位')),
                ('is_limit_over_grant_allowed', models.BooleanField(default=False, verbose_name='ボーナス付与上限超過可否')),
                ('tax_percent', models.IntegerField(default=0, verbose_name='消費税')),
                ('tax_percent_round_type', models.IntegerField(choices=[(0, 'round_down'), (1, 'round_up'), (2, 'round_off')], default=0, verbose_name='消費税小数値')),
                ('note', models.CharField(default='', max_length=191, verbose_name='備考')),
            ],
            options={
                'verbose_name': 'キャンペーン情報',
                'verbose_name_plural': 'キャンペーン情報',
                'db_table': 'campaign',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_number', models.CharField(max_length=24, unique=True, verbose_name='カード番号')),
                ('pin_number', models.CharField(max_length=191, verbose_name='PIN番号')),
                ('magnetic_information', models.CharField(max_length=69, null=True, unique=True, verbose_name='磁気情報')),
                ('status', models.IntegerField(choices=[(1, 'not_activated'), (2, 'activated'), (3, 'stopped'), (4, 'merged'), (5, 'destroyed')], default=1, verbose_name='カード状態')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='アクティベート日時')),
                ('destroyed_at', models.DateTimeField(null=True, verbose_name='破棄日時')),
                ('is_locked', models.BooleanField(default=False, verbose_name='ロックフラグ')),
                ('is_test', models.BooleanField(default=False, verbose_name='テストカードフラグ')),
                ('remarks', models.TextField(max_length=255, null=True, verbose_name='備考')),
            ],
            options={
                'verbose_name': 'カード情報',
                'verbose_name_plural': 'カード情報',
                'db_table': 'card',
                'ordering': ['card_number'],
            },
        ),
        migrations.CreateModel(
            name='CardConfig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_name', models.CharField(max_length=191, verbose_name='カード名称')),
                ('card_category', models.IntegerField(choices=[(1, 'e_money'), (2, 'gift')], default=1, verbose_name='カード種別')),
                ('exists_physics_card', models.BooleanField(default=True, verbose_name='物理カード存在フラグ')),
                ('is_promotion_card', models.BooleanField(default=False, verbose_name='販促カードフラグ')),
                ('card_design_url', models.URLField(max_length=2048, verbose_name='カードデザインURL')),
                ('prepaid_value_name', models.CharField(max_length=191, verbose_name='前払いバリュー名称')),
                ('prepaid_value_currency_unit', models.CharField(max_length=191, verbose_name='前払いバリュー通貨単位')),
                ('prepaid_value_balance_limit', models.IntegerField(verbose_name='前払いバリュー残高上限値')),
                ('payable_bonus_name', models.CharField(default='', max_length=191, verbose_name='決済併用ボーナス名称')),
                ('payable_bonus_currency_unit', models.CharField(max_length=191, verbose_name='決済併用ボーナス通貨単位')),
                ('payable_bonus_balance_limit', models.IntegerField(verbose_name='決済併用ボーナス残高上限値')),
                ('exchange_bonus_name', models.CharField(max_length=191, verbose_name='決済併用ボーナス名称')),
                ('exchange_bonus_currency_unit', models.CharField(max_length=191, verbose_name='決済併用ボーナス通貨単位')),
                ('exchange_bonus_balance_limit', models.IntegerField(verbose_name='決済併用ボーナス残高上限値')),
                ('start_apply_at', models.DateTimeField(verbose_name='適用開始日時')),
                ('end_apply_at', models.DateTimeField(null=True, verbose_name='適用終了日時')),
            ],
            options={
                'verbose_name': 'カード設定情報',
                'verbose_name_plural': 'カード設定情報',
                'db_table': 'card_config',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255, verbose_name='企業名')),
                ('corporate_number', models.CharField(max_length=13, verbose_name='法人番号')),
                ('postal_code', models.CharField(max_length=7, verbose_name='郵便番号')),
                ('address_pref', models.CharField(max_length=2, verbose_name='住所(都道府県)')),
                ('address_city', models.CharField(max_length=255, verbose_name='住所(市区町村)')),
                ('address_town', models.CharField(max_length=255, null=True, verbose_name='住所(町域名)')),
                ('address_other', models.CharField(max_length=255, null=True, verbose_name='住所(その他)')),
                ('phone_number', models.CharField(max_length=15, verbose_name='電話番号')),
                ('available_service', models.CharField(default='', max_length=255, verbose_name='利用可能サービス')),
                ('available_transaction_type', models.CharField(default='', max_length=255, verbose_name='利用可能な取引種別')),
                ('start_available_date', models.DateField(verbose_name='有効開始日')),
                ('end_available_date', models.DateField(null=True, verbose_name='有効終了日')),
                ('status', models.IntegerField(default=0, verbose_name='ステータス')),
                ('remarks', models.CharField(default='', max_length=255, verbose_name='備考')),
            ],
            options={
                'verbose_name': '企業情報',
                'verbose_name_plural': '企業情報',
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='ConsoleAccount',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, verbose_name='業種名')),
            ],
            options={
                'verbose_name': '管理コンソールアカウント情報',
                'verbose_name_plural': '管理コンソールアカウント情報',
                'db_table': 'console_account',
            },
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.IntegerField(choices=[(0, '利用中'), (1, 'ログインロック'), (2, '利用停止'), (3, '退会済み')], verbose_name='アカウント状態')),
                ('consumer_number', models.CharField(max_length=255, verbose_name='会員番号')),
                ('email', models.CharField(default='', max_length=255, verbose_name='メールアドレス')),
                ('user_name', models.CharField(default='', max_length=255, verbose_name='氏名')),
                ('user_phonetic_name', models.CharField(default='', max_length=255, verbose_name='氏名カナ')),
                ('nickname', models.CharField(max_length=255, null=True, verbose_name='ニックネーム')),
                ('phone_number', models.CharField(default='', max_length=255, verbose_name='電話番号')),
                ('birthday', models.DateField(verbose_name='生年月日')),
                ('country', models.CharField(default='', max_length=255, verbose_name='国籍')),
                ('address_pref', models.CharField(default='', max_length=255, verbose_name='住所(都道府県)')),
                ('address_city', models.CharField(default='', max_length=255, verbose_name='住所(市区町村)')),
                ('address_town', models.CharField(default='', max_length=255, verbose_name='住所(町域)')),
                ('address_other', models.CharField(default='', max_length=255, verbose_name='住所(その他)')),
                ('gender', models.IntegerField(choices=[(0, '男'), (1, '女'), (2, 'その他')], default=0, verbose_name='性別')),
                ('profession', models.CharField(default='', max_length=255, verbose_name='職業')),
                ('news_notification_enabled', models.BooleanField(default=True, verbose_name='お知らせ通知可否')),
            ],
            options={
                'verbose_name': '消費者アカウント情報',
                'verbose_name_plural': '消費者アカウント情報',
                'db_table': 'consumer',
            },
        ),
        migrations.CreateModel(
            name='CorpInfo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('host', models.CharField(default='', max_length=191, verbose_name='ホスト名')),
                ('company_name', models.CharField(default='', max_length=191, verbose_name='事業者名')),
                ('service_name', models.CharField(default='', max_length=191, verbose_name='サービス名')),
                ('logo_url', models.URLField(default='', verbose_name='事業者サービスロゴURL')),
                ('privacy_policy_url', models.URLField(default='', verbose_name='プライバシーポリシーURL')),
                ('privacy_policy_regulation_date', models.DateTimeField(verbose_name='プライバシーポリシー規定日')),
                ('privacy_policy_version', models.CharField(max_length=191, null=True, verbose_name='プライバシーポリシーバージョン ')),
                ('terms_of_service_url', models.URLField(default='', verbose_name='利用規約URL')),
                ('terms_of_service_regulation_date', models.DateTimeField(verbose_name='利用規約規定日')),
                ('terms_of_service_version', models.CharField(default='', max_length=191, verbose_name='利用規約バージョン')),
                ('copyright_notice', models.CharField(default='', max_length=191, verbose_name='著作権表示')),
                ('e_money_card', models.IntegerField(default=0, verbose_name='電子マネーカード可否')),
                ('prepaid_value', models.IntegerField(default=0, verbose_name='前払バリュー可否')),
                ('payable_bonus', models.IntegerField(default=0, verbose_name='決済併用ボーナス可否')),
                ('exchange_bonus', models.IntegerField(default=0, verbose_name='商品交換ボーナス可否')),
            ],
            options={
                'verbose_name': 'サービス情報',
                'verbose_name_plural': 'サービス情報',
                'db_table': 'corp_info',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='')),
            ],
            options={
                'verbose_name': '',
                'verbose_name_plural': '',
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='ManagementTag',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=191, verbose_name='管理タグ名')),
                ('category', models.IntegerField(choices=[(1, 'prepaid'), (2, 'shop'), (3, 'terminal'), (4, 'consumer')], verbose_name='管理タグ種別')),
            ],
            options={
                'verbose_name': '管理タグ情報',
                'verbose_name_plural': '管理タグ情報',
                'db_table': 'management_tag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OfficialPosition',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '店舗情報',
                'verbose_name_plural': '店舗情報',
                'db_table': 'official_position',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='')),
                ('target', models.CharField(max_length=255, verbose_name='')),
            ],
            options={
                'verbose_name': '',
                'verbose_name_plural': '',
                'db_table': 'permission',
            },
        ),
        migrations.CreateModel(
            name='Prefectures',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='都道府県ID')),
                ('name', models.CharField(max_length=5, verbose_name='都道府県名')),
            ],
            options={
                'verbose_name': '都道府県情報',
                'verbose_name_plural': '都道府県情報',
                'db_table': 'prefectures',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('owner_name', models.CharField(default='', max_length=191, verbose_name='代表者氏名')),
                ('owner_phonetic_name', models.CharField(default='', max_length=191, verbose_name='代表者氏名カナ')),
                ('owner_address_pref', models.CharField(default='', max_length=191, verbose_name='代表者住所(都道府県)')),
                ('owner_address_city', models.CharField(default='', max_length=191, verbose_name='代表者住所(市区町村)')),
                ('owner_address_town', models.CharField(default='', max_length=191, verbose_name='代表者住所(町域名)')),
                ('owner_address_other', models.CharField(default='', max_length=191, verbose_name='代表者住所(その他)')),
                ('owner_birthday', models.DateField(null=True, verbose_name='代表者生年月日')),
                ('provider_name', models.CharField(default='', max_length=191, verbose_name='事業者名称')),
                ('provider_coporate_number', models.CharField(default='', max_length=191, verbose_name='事業者法人番号')),
                ('provider_postal_code', models.CharField(default='', max_length=191, verbose_name='事業者郵便番号')),
                ('provider_address_pref', models.CharField(default='', max_length=191, verbose_name='事業者住所(都道府県)')),
                ('provider_address_city', models.CharField(default='', max_length=191, verbose_name='事業者住所(市区町村)')),
                ('provider_address_town', models.CharField(default='', max_length=191, verbose_name='事業者住所(町域名)')),
                ('provider_address_other', models.CharField(default='', max_length=191, verbose_name='事業者住所(その他)')),
                ('provider_phone_number', models.CharField(default='', max_length=191, verbose_name='事業者電話番号')),
                ('inquiry_phone_number', models.CharField(default='', max_length=191, verbose_name='事業者電話番号')),
                ('service_name', models.CharField(default='', max_length=191, verbose_name='サービス名称')),
                ('service_logo_url', models.URLField(default='', verbose_name='サービスロゴURL')),
                ('start_available_date', models.DateTimeField(verbose_name='利用開始日')),
                ('end_available_date', models.DateTimeField(null=True, verbose_name='利用終了日')),
                ('value_enabled_flag', models.BooleanField(default=True, verbose_name='バリュー有効フラグ')),
                ('physical_card_flag', models.BooleanField(default=True, verbose_name='物理カードフラグ')),
                ('payable_bonus_flag', models.BooleanField(default=True, verbose_name='支払い可能ボーナスフラグ')),
                ('balance_inquiry_page_flag', models.BooleanField(default=True, verbose_name='残高照会ページ')),
                ('exchange_bonus_flag', models.BooleanField(default=True, verbose_name='残高照会ページ')),
                ('status', models.IntegerField(choices=[(1, '審査中'), (2, '利用可'), (3, '退会済')], default=1, verbose_name='ステータス')),
            ],
            options={
                'verbose_name': '事業者情報',
                'verbose_name_plural': '事業者情報',
                'db_table': 'provider',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='')),
            ],
            options={
                'verbose_name': '',
                'verbose_name_plural': '',
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shop_name', models.CharField(default='', max_length=191, verbose_name='店舗名')),
                ('shop_name_english_characters', models.CharField(default='', max_length=191, verbose_name='店舗名ローマ字')),
                ('shop_number', models.CharField(default='', max_length=191, verbose_name='店舗番号')),
                ('postal_code', models.CharField(default='', max_length=191, verbose_name='郵便番号')),
                ('address_city', models.CharField(default='', max_length=191, verbose_name='住所(市区町村)')),
                ('address_town', models.CharField(default='', max_length=191, verbose_name='住所(町域)')),
                ('address_other', models.CharField(default='', max_length=191, verbose_name='住所(その他)')),
                ('phone_number', models.CharField(default='', max_length=191, verbose_name='電話番号')),
                ('start_available_date', models.DateField(verbose_name='利用開始日')),
                ('end_available_date', models.DateField(null=True, verbose_name='利用終了日')),
                ('address_pref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.prefectures', verbose_name='都道府県ID')),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.businesstype', verbose_name='業種ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.company', verbose_name='企業ID')),
                ('management_tags', models.ManyToManyField(null=True, to='database.ManagementTag', verbose_name='管理タグ')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.provider', verbose_name='企業ID')),
            ],
            options={
                'verbose_name': '店舗情報',
                'verbose_name_plural': '店舗情報',
                'db_table': 'shop',
            },
        ),
        migrations.CreateModel(
            name='Terminal',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('terminal_category', models.IntegerField(choices=[(1, 'pos'), (2, 'payment_terminal'), (3, 'charge_terminal')], default=1, verbose_name='店舗端末種別')),
                ('terminal_number', models.CharField(default='', max_length=191, verbose_name='店舗端末番号')),
                ('start_available_date', models.DateField(verbose_name='利用開始日')),
                ('end_available_date', models.DateField(null=True, verbose_name='利用終了日')),
                ('company', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='database.company', verbose_name='企業ID')),
                ('management_tags', models.ManyToManyField(null=True, to='database.ManagementTag', verbose_name='管理タグ')),
                ('provider', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='database.provider', verbose_name='事業者ID')),
                ('shop', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='database.shop', verbose_name='店舗ID')),
            ],
            options={
                'verbose_name': '店舗端末情報',
                'verbose_name_plural': '店舗端末情報',
                'db_table': 'terminal',
            },
        ),
        migrations.CreateModel(
            name='TransactionCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=191, verbose_name='取引種別名')),
            ],
            options={
                'verbose_name': '取引種別情報',
                'verbose_name_plural': '取引種別情報',
                'db_table': 'transaction_category',
            },
        ),
        migrations.CreateModel(
            name='UseCondition',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.IntegerField(choices=[(1, 'company'), (2, 'shop'), (3, 'management_tag'), (4, 'transaction_category')], verbose_name='利用制限種別')),
            ],
            options={
                'verbose_name': '利用制限設定情報',
                'verbose_name_plural': '利用制限設定情報',
                'db_table': 'use_condition',
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.IntegerField(choices=[(1, 'prepaid'), (2, 'fund_transfer'), (3, 'specially')], default=1, verbose_name='バリュー種別')),
                ('amount', models.IntegerField(default=0, verbose_name='残高')),
                ('expired_at', models.DateTimeField(verbose_name='有効期限日')),
                ('is_charge_value', models.BooleanField(default=True, verbose_name='チャージバリューフラグ')),
                ('granted_at', models.DateTimeField(null=True, verbose_name='付与日')),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.campaign', verbose_name='付与キャンペーンID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.card', verbose_name='カードID')),
                ('use_condition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.usecondition', verbose_name='利用制限ID')),
            ],
            options={
                'verbose_name': 'バリュー情報',
                'verbose_name_plural': 'バリュー情報',
                'db_table': 'value',
            },
        ),
        migrations.CreateModel(
            name='UseConditionTransactionCategoryRelation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('transaction_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.transactioncategory', verbose_name='取引種別ID')),
                ('use_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.usecondition', verbose_name='利用制限ID')),
            ],
            options={
                'verbose_name': '取引種別と利用制限の中間テーブル',
                'verbose_name_plural': '取引種別と利用制限の中間テーブル',
                'db_table': 'use_condition_transaction_category_relation',
            },
        ),
        migrations.CreateModel(
            name='UseConditionShopRelation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.shop', verbose_name='店舗ID')),
                ('use_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.usecondition', verbose_name='利用制限ID')),
            ],
            options={
                'verbose_name': '店舗と利用制限の中間テーブル',
                'verbose_name_plural': '店舗と利用制限の中間テーブル',
                'db_table': 'use_condition_shop_relation',
            },
        ),
        migrations.CreateModel(
            name='UseConditionManagementTagRelation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('management_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.managementtag', verbose_name='管理タグID')),
                ('use_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.usecondition', verbose_name='利用制限ID')),
            ],
            options={
                'verbose_name': '管理タグと利用制限の中間テーブル',
                'verbose_name_plural': '管理タグと利用制限の中間テーブル',
                'db_table': 'use_condition_management_tag_relation',
            },
        ),
        migrations.CreateModel(
            name='UseConditionCompanyRelation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.company', verbose_name='企業ID')),
                ('use_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.usecondition', verbose_name='利用制限ID')),
            ],
            options={
                'verbose_name': '企業と利用制限の中間テーブル',
                'verbose_name_plural': '企業と利用制限の中間テーブル',
                'db_table': 'use_condition_company_relation',
            },
        ),
        migrations.AddField(
            model_name='usecondition',
            name='companies',
            field=models.ManyToManyField(null=True, through='database.UseConditionCompanyRelation', to='database.Company'),
        ),
        migrations.AddField(
            model_name='usecondition',
            name='management_tags',
            field=models.ManyToManyField(through='database.UseConditionManagementTagRelation', to='database.ManagementTag'),
        ),
        migrations.AddField(
            model_name='usecondition',
            name='shops',
            field=models.ManyToManyField(through='database.UseConditionShopRelation', to='database.Shop'),
        ),
        migrations.AddField(
            model_name='usecondition',
            name='transaction_categories',
            field=models.ManyToManyField(through='database.UseConditionTransactionCategoryRelation', to='database.TransactionCategory'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('transaction_number', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('transaction_at', models.DateTimeField(default=django.utils.timezone.now, help_text='ミリ秒の差異発生を考慮して登録日/更新日とは別に持つ', verbose_name='取引日時')),
                ('category', models.SmallIntegerField(choices=[(1, 'payment'), (-1, 'payment_cancel'), (2, 'charge'), (-2, 'charge_cancel'), (3, 'grant'), (-3, 'grant_cancel'), (4, 'use_bonus'), (-4, 'use_bonus_cancel'), (5, 'expired'), (6, 'card_activate'), (7, 'card_lock'), (-7, 'card_unlock'), (8, 'card_merge'), (9, 'card_stop'), (-9, 'card_unstop'), (10, 'card_destroy')], verbose_name='取引種別')),
                ('status', models.SmallIntegerField(choices=[(1, 'incomplete'), (2, 'completed')], default=1, verbose_name='取引状態')),
                ('total_prepaid_value_amount', models.IntegerField(default=0, verbose_name='前払いバリュー取引総額')),
                ('total_payable_bonus_amount', models.IntegerField(default=0, verbose_name='決済併用ボーナス取引総数')),
                ('total_exchange_bonus_amount', models.IntegerField(default=0, verbose_name='商品交換ボーナス取引総数')),
                ('campaign_apply_timing', models.SmallIntegerField(choices=[(0, 'not_apply'), (1, 'sync'), (2, 'async')], default=0, help_text='\n            NOT_APPLY = 0\n            SYNC = 1\n            ASYNC = 2\n        ', verbose_name='キャンペーン適用タイミング')),
                ('operator', models.CharField(max_length=191, null=True)),
                ('transaction_method', models.SmallIntegerField(choices=[(1, 'terminal'), (2, 'cpm'), (3, 'mpm')], default=1, help_text='\n            TERMINAL = 1\n            CPM = 2\n            MPM = 3\n        ', verbose_name='取引方式')),
                ('charge_payment_method', models.IntegerField(choices=[(1, 'cash'), (2, 'credit_card')], null=True, verbose_name='チャージ金支払い方法')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.company', verbose_name='企業ID')),
                ('consumer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.consumer', verbose_name='消費者アカウントID')),
                ('parent_transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='database.transaction')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.provider', verbose_name='事業者ID')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.shop', verbose_name='店舗ID')),
                ('terminal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.terminal', verbose_name='店舗端末ID')),
            ],
            options={
                'verbose_name': '取引履歴情報',
                'verbose_name_plural': '取引履歴情報',
                'db_table': 'transaction',
                'ordering': ['transaction_at'],
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requested_at', models.DateTimeField(verbose_name='申請日時')),
                ('request_category', models.IntegerField(verbose_name='申請種別')),
                ('request_status', models.IntegerField(verbose_name='申請ステータス')),
                ('approve_account', models.ForeignKey(db_column='approve_account', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approve_account', to='database.consoleaccount')),
                ('request_account', models.ForeignKey(db_column='request_account', on_delete=django.db.models.deletion.CASCADE, related_name='request_account', to='database.consoleaccount')),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.transaction')),
            ],
            options={
                'verbose_name': '申請情報',
                'verbose_name_plural': '申請情報',
                'db_table': 'request',
            },
        ),
        migrations.CreateModel(
            name='PermissionManagement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('state', models.IntegerField(choices=[(1, '利用可能'), (2, '利用可能だが、一部操作で申請が必要'), (3, '利用不可')])),
                ('remarks', models.TextField(default='')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.group', verbose_name='')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.permission', verbose_name='')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.role', verbose_name='')),
            ],
            options={
                'verbose_name': '',
                'verbose_name_plural': '',
                'db_table': 'permission_management',
            },
        ),
        migrations.AddField(
            model_name='consumer',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.provider', verbose_name='事業者ID'),
        ),
        migrations.AddField(
            model_name='consoleaccount',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.group', verbose_name=''),
        ),
        migrations.AddField(
            model_name='consoleaccount',
            name='provider',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.provider', verbose_name='事業者ID'),
        ),
        migrations.AddField(
            model_name='consoleaccount',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.role', verbose_name=''),
        ),
        migrations.AddField(
            model_name='company',
            name='management_tags',
            field=models.ManyToManyField(null=True, to='database.ManagementTag', verbose_name='管理タグ'),
        ),
        migrations.AddField(
            model_name='company',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.provider', verbose_name='事業者ID'),
        ),
        migrations.CreateModel(
            name='CardTransaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_at', models.DateTimeField(verbose_name='カード取引日時')),
                ('transaction_type', models.IntegerField(choices=[(1, 'payment'), (-1, 'payment_cancel'), (2, 'charge'), (-2, 'charge_cancel'), (3, 'grant'), (-3, 'grant_cancel'), (4, 'use_bonus'), (-4, 'use_bonus_cancel'), (5, 'expired'), (6, 'card_activate'), (7, 'card_lock'), (-7, 'card_unlock'), (8, 'card_merge'), (9, 'card_stop'), (-9, 'card_unstop'), (10, 'card_destroy')], verbose_name='カード取引種別')),
                ('prepaid_value', models.IntegerField(default=0, verbose_name='前払いバリュー取引額')),
                ('payable_bonus', models.IntegerField(default=0, verbose_name='決済併用ボーナス取引数')),
                ('exchange_bonus', models.IntegerField(default=0, verbose_name='商品交換ボーナス取引数')),
                ('replace_source_card_number', models.CharField(max_length=24, null=True, verbose_name='付替元カード番号')),
                ('replace_target_card_number', models.CharField(max_length=24, null=True, verbose_name='付替先カード番号')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.card', verbose_name='カードID')),
                ('card_config', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.cardconfig', verbose_name='カード設定id')),
                ('company', models.ForeignKey(max_length=32, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.company', verbose_name='企業ID')),
                ('grant_bonus', models.ForeignKey(max_length=32, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.bonus', verbose_name='付与ボーナスID')),
                ('grant_value', models.ForeignKey(max_length=32, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.value', verbose_name='付与バリューID')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.provider', verbose_name='事業者ID')),
                ('shop', models.ForeignKey(max_length=32, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.shop', verbose_name='店舗ID')),
                ('terminal', models.ForeignKey(max_length=32, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.terminal', verbose_name='店舗端末ID')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.transaction', verbose_name='取引ID')),
            ],
            options={
                'verbose_name': 'カード取引履歴情報',
                'verbose_name_plural': 'カード取引履歴情報',
                'db_table': 'card_transaction',
            },
        ),
        migrations.CreateModel(
            name='CardConfigPayment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_limit_daily', models.IntegerField(default=500000, verbose_name='チャージ可能額(日)')),
                ('payment_limit_monthly', models.IntegerField(default=2000000, verbose_name='チャージ可能額(月)')),
                ('start_apply_at', models.DateTimeField(verbose_name='適用開始日時')),
                ('end_apply_at', models.DateTimeField(null=True, verbose_name='適用終了日時')),
                ('card_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.cardconfig', verbose_name='カード設定ID')),
            ],
            options={
                'verbose_name': 'カード決済設定情報',
                'verbose_name_plural': 'カード決済設定情報',
                'db_table': 'card_config_payment',
            },
        ),
        migrations.CreateModel(
            name='CardConfigCharge',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('charge_limit_daily', models.IntegerField(default=0, verbose_name='チャージ可能額(日)')),
                ('charge_limit_monthly', models.IntegerField(default=0, verbose_name='チャージ可能額(月)')),
                ('charge_unit', models.IntegerField(default=1000, verbose_name='チャージ可能単位')),
                ('start_apply_at', models.DateTimeField(verbose_name='適用開始日時')),
                ('end_apply_at', models.DateTimeField(null=True, verbose_name='適用終了日時')),
                ('card_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.cardconfig', verbose_name='カード設定ID')),
            ],
            options={
                'verbose_name': 'カードチャージ設定情報',
                'verbose_name_plural': 'カードチャージ設定情報',
                'db_table': 'card_config_charge',
            },
        ),
        migrations.AddField(
            model_name='cardconfig',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.provider', verbose_name='事業者ID'),
        ),
        migrations.AddField(
            model_name='card',
            name='card_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.cardconfig', verbose_name='カード設定ID'),
        ),
        migrations.AddField(
            model_name='card',
            name='consumer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.consumer', verbose_name='消費者アカウントID'),
        ),
        migrations.CreateModel(
            name='CampaignCardConfigRelation',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='キャンペーンID')),
                ('card_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.cardconfig', verbose_name='カード設定ID')),
            ],
            options={
                'verbose_name': 'キャンペーンとカード設定の中間テーブル',
                'verbose_name_plural': 'キャンペーンとカード設定の中間テーブル',
                'db_table': 'campaign_card_config_relation',
            },
        ),
        migrations.CreateModel(
            name='CampaignBonusConfig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.IntegerField(choices=[(1, 'payable'), (2, 'exchange')], default=1, verbose_name='ボーナス種別')),
                ('bonus_expiration_unit', models.IntegerField(choices=[(0, 'nothing'), (1, 'day'), (2, 'week'), (3, 'month'), (4, 'year')], null=True, verbose_name='有効期限カウント単位')),
                ('bonus_expiration_count', models.IntegerField(null=True, verbose_name='有効期限カウント数')),
                ('bonus_expiration_date', models.DateField(null=True, verbose_name='有効期限指定日')),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='キャンペーンID')),
                ('use_condition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.usecondition', verbose_name='利用制限ID')),
            ],
            options={
                'verbose_name': 'キャンペーン付与ボーナス設定情報',
                'verbose_name_plural': 'キャンペーン付与ボーナス設定情報',
                'db_table': 'campaign_bonus_config',
            },
        ),
        migrations.CreateModel(
            name='CampaignApplyRuleTransactionDetail',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('grant_count', models.IntegerField(default=0, verbose_name='付与数/率')),
                ('min_amount', models.IntegerField(null=True, verbose_name='対象最低取引金額')),
                ('max_amount', models.IntegerField(null=True, verbose_name='対象最高取引金額')),
                ('count_category', models.IntegerField(null=True, verbose_name='取引回数種別')),
                ('min_count', models.IntegerField(null=True, verbose_name='対象最低取引回数')),
                ('max_count', models.IntegerField(null=True, verbose_name='対象最高取引回数')),
                ('days_category', models.IntegerField(null=True, verbose_name='取引日数種別')),
                ('min_days', models.IntegerField(null=True, verbose_name='対象最低取引日数')),
                ('max_days', models.IntegerField(null=True, verbose_name='対象最高取引日数')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='キャンペーンID')),
            ],
            options={
                'verbose_name': 'キャンペーン適用対象取引詳細情報',
                'verbose_name_plural': 'キャンペーン適用対象取引詳細情報',
                'db_table': 'campaign_apply_rule_transaction_detail',
            },
        ),
        migrations.CreateModel(
            name='CampaignApplyRuleTransactionCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_category', models.IntegerField(choices=[(1, 'payment'), (-1, 'payment_cancel'), (2, 'charge'), (-2, 'charge_cancel'), (3, 'grant'), (-3, 'grant_cancel'), (4, 'use_bonus'), (-4, 'use_bonus_cancel'), (5, 'expired'), (6, 'card_activate'), (7, 'card_lock'), (-7, 'card_unlock'), (8, 'card_merge'), (9, 'card_stop'), (-9, 'card_unstop'), (10, 'card_destroy')], verbose_name='対象取引種別')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='キャンペーンID')),
            ],
            options={
                'verbose_name': 'キャンペーン適用対象取引種別情報',
                'verbose_name_plural': 'キャンペーン適用対象取引種別情報',
                'db_table': 'campaign_apply_rule_transaction_category',
            },
        ),
        migrations.CreateModel(
            name='CampaignApplyRulePlace',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target_city', models.CharField(max_length=191, null=True, verbose_name='対象市区町村')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='キャンペーンID')),
                ('target_company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.company', verbose_name='対象企業')),
                ('target_management_tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.managementtag', verbose_name='対象管理タグ')),
                ('target_prefectures', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.prefectures', verbose_name='対象都道府県')),
                ('target_shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.shop', verbose_name='対象店舗')),
            ],
            options={
                'verbose_name': 'キャンペーン適用対象取引場所情報',
                'verbose_name_plural': 'キャンペーン適用対象取引場所情報',
                'db_table': 'campaign_apply_rule_place',
            },
        ),
        migrations.CreateModel(
            name='CampaignApplyRuleCardActivateDate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_target_at', models.DateTimeField(null=True, verbose_name='対象開始日')),
                ('end_target_at', models.DateTimeField(null=True, verbose_name='対象終了日')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='キャンペーンID')),
            ],
            options={
                'verbose_name': 'キャンペーン適用対象アクティベート日情報',
                'verbose_name_plural': 'キャンペーン適用対象アクティベート日情報',
                'db_table': 'campaign_apply_rule_card_activate_date',
            },
        ),
        migrations.CreateModel(
            name='CampaignApplyRuleActiveTiming',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active_timing_category', models.IntegerField(choices=[(0, 'always'), (1, 'select_time'), (2, 'select_day_of_week'), (3, 'select_day'), (4, 'select_day_and_month'), (5, 'select_period')], default=0, verbose_name='有効タイミング種別')),
                ('active_start_at', models.TimeField(null=True, verbose_name='キャンペーン有効開始時間')),
                ('active_end_at', models.TimeField(null=True, verbose_name='キャンペーン有効終了時間')),
                ('active_day_of_week', models.IntegerField(choices=[(0, 'mon'), (1, 'tue'), (2, 'wed'), (3, 'thu'), (4, 'fri'), (5, 'sat'), (6, 'sun')], null=True, verbose_name='キャンペーン有効曜日')),
                ('active_target_day', models.IntegerField(null=True, verbose_name='キャンペーン有効指定日')),
                ('active_target_month', models.IntegerField(null=True, verbose_name='キャンペーン有効指定月')),
                ('active_start_date', models.DateField(null=True, verbose_name='キャンペーン有効指定開始日')),
                ('active_end_date', models.DateField(null=True, verbose_name='キャンペーン有効指定終了日')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='キャンペーンID')),
            ],
            options={
                'verbose_name': 'キャンペーン適用対象タイミング情報',
                'verbose_name_plural': 'キャンペーン適用対象タイミング情報',
                'db_table': 'campaign_apply_rule_active_timing',
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='card_config',
            field=models.ManyToManyField(through='database.CampaignCardConfigRelation', to='database.CardConfig'),
        ),
        migrations.AddField(
            model_name='bonus',
            name='card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.card', verbose_name='カードID'),
        ),
        migrations.AddField(
            model_name='bonus',
            name='use_condition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.usecondition', verbose_name='利用制限ID'),
        ),
        migrations.CreateModel(
            name='ApplyCampaign',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('campaign_name', models.CharField(max_length=191, verbose_name='適用キャンペーン名')),
                ('applied_at', models.DateTimeField(verbose_name='適用日時')),
                ('bonus_category', models.IntegerField(choices=[(1, 'payable'), (2, 'exchange')], default=1, verbose_name='付与ボーナス種別')),
                ('bonus_grant_count', models.IntegerField(default=0, verbose_name='付与ボーナス数')),
                ('bonus_expired_at', models.DateField(verbose_name='付与ボーナス有効期限日')),
                ('bonus', models.ForeignKey(max_length=32, on_delete=django.db.models.deletion.PROTECT, to='database.bonus', verbose_name='付与ボーナスID')),
                ('campaign', models.ForeignKey(max_length=32, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.campaign', verbose_name='適用キャンペーンID')),
                ('card_transaction', models.ForeignKey(max_length=32, on_delete=django.db.models.deletion.PROTECT, to='database.cardtransaction', verbose_name='適用対象カード取引履歴ID')),
            ],
            options={
                'verbose_name': 'キャンペーン適用履歴情報',
                'verbose_name_plural': 'キャンペーン適用履歴情報',
                'db_table': 'apply_campaign',
            },
        ),
        migrations.AddIndex(
            model_name='terminal',
            index=models.Index(fields=['company', 'shop', 'terminal_number'], name='terminal_company_594d29_idx'),
        ),
    ]

version: 0.2

env:
  secrets-manager:
    DOCKER_USER: DockerHubSecrets:name
    DOCKER_TOKEN: DockerHubSecrets:token

phases:
  pre_build:
    commands:
      - echo ECRへのプッシュ準備...
      - REGION_URL=${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $REGION_URL
      - NGINX_REPOSITORY_URI=${REGION_URL}/${CONSOLE_NGINX_REPO_NAME}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - ENV_PATH=s3://${ENV_FILE_S3_BUCK}/env/.env.${ENV}
      - aws s3 cp $ENV_PATH ./frontend/packages/utils/.env --region $REGION
      - aws s3 cp $ENV_PATH ./frontend/packages/api/.env --region $REGION
      - aws s3 cp $ENV_PATH ./frontend/packages/web-console/.env --region $REGION
      - mv ./nginx/site_console.conf ./nginx/site.conf
  build:
    commands:
      - echo ビルドの開始日時 `date`
      - echo DockerImagesのビルド...
      - echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - docker build -t nodejs -f $(pwd)/frontend/Dockerfile .
      - docker run -v $(pwd)/frontend:/var/www/ -w /var/www/frontend nodejs yarn install
      - docker run -v $(pwd)/frontend:/var/www/ -w /var/www/frontend nodejs yarn workspace utils build:${FRONTEND_BUILD_MODE}
      - docker run -v $(pwd)/frontend:/var/www/ -w /var/www/frontend nodejs yarn workspace api build:${FRONTEND_BUILD_MODE}
      - docker run -v $(pwd)/frontend:/var/www/ -w /var/www/frontend nodejs yarn workspace web-console build:${FRONTEND_BUILD_MODE} --dest ../../dist
      - docker build -t $NGINX_REPOSITORY_URI:latest -f nginx/Dockerfile .
      - docker tag $NGINX_REPOSITORY_URI:latest $NGINX_REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo ビルド完了日時 `date`
      - echo DockerImagesのプッシュ...
      - docker push $NGINX_REPOSITORY_URI:latest
      - docker push $NGINX_REPOSITORY_URI:$IMAGE_TAG
      - echo image definitions file の作成...
      - echo "[{\"name\":\"nginx\",\"imageUri\":\"${NGINX_REPOSITORY_URI}:${IMAGE_TAG}\"}]" > consolewebimagedefinitions.json
artifacts:
    files:
      - consolewebimagedefinitions.json
